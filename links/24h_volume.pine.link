// 24h volume
currency = "USD"
msIn24h = 24*60*60*1000
countOfFiveMinsInDay = 24*60/5
maxBufferSize = 2*countOfFiveMinsInDay
cumVolTF = "5"
expr(offset, maxBufferSize) =>
	if (syminfo.volumetype == "quote")
		// max_bars_back(volume, maxBufferSize)
		volume[offset] + 0 * volume[maxBufferSize]
	else
		if syminfo.volumetype == "base"
			// max_bars_back(close, maxBufferSize)
			// max_bars_back(volume, maxBufferSize)
			close[offset] * volume[offset] + 0 * close[maxBufferSize] * volume[maxBufferSize]
		else
			na

cum24hVol() =>
	// max_bars_back(time, maxBufferSize)
	var cumSum = 0. * time[maxBufferSize]
	var int firstBarTimeIndex = na
	if na(firstBarTimeIndex) // 24 H have not elapsed yet
		sum = 0.
		for i = 0 to countOfFiveMinsInDay
			if (time - time[i]) >= msIn24h
				firstBarTimeIndex := bar_index - i + 1
				break
			sum += expr(i, maxBufferSize)
		cumSum := sum
	else
		cumSum += nz(expr(0, maxBufferSize))
		for i = firstBarTimeIndex to bar_index
			if (time - time[bar_index - i]) < msIn24h
				firstBarTimeIndex := i
				break
			cumSum -= nz(expr(bar_index - i, maxBufferSize))
			if cumSum <= 0
				cumSum := 0
	cumSum

vol24h = request.security(syminfo.tickerid, cumVolTF, cum24hVol(), lookahead = barmerge.lookahead_off, currency = currency, ignore_invalid_symbol=true)
plot(vol24h, title = "24h_vol", style = plot.style_columns)

// volume in base and quote currencies
volBase = syminfo.volumetype == "base" ? volume : ( syminfo.volumetype == "quote" and close != 0 ? volume / close : na )
volQuote = syminfo.volumetype == "quote" ? volume : ( syminfo.volumetype == "base" ? volume * close : na ) 
plot(volBase, title = "volume_base", style = plot.style_columns)
plot(volQuote, title = "volume_quote", style = plot.style_columns)

// 24h prev value (generic)
prev24hVal(source) =>
	src = source
	// max_bars_back(src, maxBufferSize)
	// max_bars_back(time, maxBufferSize)
	int BB24h = na
	for i = 0 to countOfFiveMinsInDay
		if (time - time[i]) >= msIn24h
			if (time - time[i]) == msIn24h
				BB24h := i
			break
		BB24h := i
	src[BB24h] + 0 * src[maxBufferSize] * time[maxBufferSize]

// 24h vol prev value
vol24hPrev = prev24hVal(vol24h)
plot(vol24hPrev, title = "24h_vol_prev", style = plot.style_columns)

// 24h volume change abs
float vol24hChangeAbs = na
if not na(vol24h) and not na(vol24hPrev)
	vol24hChangeAbs := vol24h - vol24hPrev
plot(vol24hChangeAbs, title = "24h_vol_change_abs", style = plot.style_columns)

// 24h volume change
float vol24hChange = na
if not na(vol24hChangeAbs) and vol24hPrev != 0
	vol24hChange := (vol24hChangeAbs / math.abs(vol24hPrev)) * 100
plot(vol24hChange, title = "24h_vol_change", style = plot.style_columns)

// 24h close prev value
close24hPrev = prev24hVal(close)
plot(close24hPrev, title = "24h_close_prev", style = plot.style_columns)

// 24h close change abs
float close24hChangeAbs = na
if not na(close) and not na(close24hPrev)
	close24hChangeAbs := close - close24hPrev
plot(close24hChangeAbs, title = "24h_close_change_abs", style = plot.style_columns)

// 24h close change
float close24hChange = na
if na(close24hChangeAbs) or close24hPrev == 0 or (close24hPrev < 0 and close > 0)
	na
else
	close24hChange := (close24hChangeAbs / math.abs(close24hPrev)) * 100
plot(close24hChange, title = "24h_close_change", style = plot.style_columns)
